[{"url": "https://wiki.ros.org/py_trees_ros", "package": "py_trees_ros", "package_summary": ["Ros extensions and behaviours for py_trees."], "package_details": ["\n", " ", "\n", "Get started at the ", " for the project. "]}
,{"url": "https://wiki.ros.org/pr2_gripper_sensor_controller", "package": "pr2_gripper_sensor_controller", "package_summary": ["The pr2_gripper_sensor_controller package is a real-time controller that integrates signals from the PR2 hand-mounted accelerometer and finger-mounted pressure sensors with motor control of the gripper joint to do highly responsive sensing and low-latency closed-loop control."], "package_details": ["\n", " ", " ", "\n", "\n", "\n", "\n", "The ", " package is a real-time controller that is intended to support the ", " interface and allow it to: ", "The ", " package continuously publishes several messages defined in the ", " package, which are intended for use in the action servers of ", " and not for normal user usage, but can provide useful information for more advanced users. ", "The ", " ", " two important PR2 sensors to be available: ", "A simple test to check if these sensors exist is to run the command ", " and check to make sure the ", " and ", " fields are present. ", "If you are not using a prebuilt installation you may have to compile the ", " package. Since the ", " package is a real-time controller, it is important to remember to compile the package ", " launching your robot, otherwise it will fail to register and load correctly with ", ". Compiling can be done simply by typing: ", "Or by building any of the higher-level packages (such as ", " which depend on this package) ", " launching your robot. ", "See the ", " launch instructions, which will automatically launch the ", " package for both the left and right PR2 grippers. Specific left/right launch files are available in the ", " package, but it is unecessary for the end user to launch them independently. "], "package_tt": ["rostopic\u00a0list", "/accelerometer", "/pressure"], "package_code": ["rosmake pr2_gripper_sensor_controller"]}
,{"url": "https://wiki.ros.org/ps3joy", "package": "ps3joy", "package_summary": ["Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.\n    Driver for the Sony PlayStation 3 SIXAXIS or DUAL SHOCK 3\n    joysticks. In its current state, this driver is not compatible\n    with the use of other Bluetooth HID devices. The driver listens\n    for a connection on the HID ports, starts the joystick\n    streaming data, and passes the data to the Linux uinput device\n    so that it shows up as a normal joystick."], "package_details": ["\n", "\n", "\n", " is known to work with Ubuntu 12.10, Ubuntu 12.04, Ubuntu Jaunty 9.04, and Ubuntu Hardy 8.04. To make it work with Ubuntu Karmic 9.10, you will have to follow these ", ". ", "\n", "\n", "\n", "\n", " ", "\n", " ", "\n", "\n", " ", " ", "  ", " ", " ", "\n", "\n", "\n", "\n", " ", " ", " ", " also exposes the joystick's three-axis accelerometer and the single-axis gyroscope: ", "\n", "This driver exists because Linux's native support for the PS3 joystick is unreliable, and does not give access to the joystick's accelerometers and gyroscope. This driver solves both problems. However in its current form, ", ". In future releases, we plan to allow first non-HID and later any bluetooth device to coexist with this driver. If you have a need for such functionality, let it be known. ", "The ", " is a good starting point for how to use this package. ", "This is the same for ", " and ", ". ", "Or you could write a sudo script for sourcing ROS and starting ps3joy_node; I use ", " to automatically start the ", " after booting and a ROS-check. ", "There is ", ". ", "With these #defines you can access the PS3 buttons within the ", " without worrying about magic numbers: "], "package_tt": ["ps3joy.py", "sudo", "joy/set_feedback", "/diagnostics", "ps3joy.py", "ps3joy_node.py", "--inactivity-timeout", "--no-disable-bluetoothd", "ps3joy.py", "--redirect-output", "ps3joy.py", "--continuous-output", "ps3joy_node"], "package_code": ["sudo apt-get install ros-%ROSDISTRO%-joystick-drivers\n", "sudo apt-get install ros-indigo-joystick-drivers       (ROS Indigo for example)", "$ ./ps3joy.py --help\n", "usage: ps3joy.py [--inactivity-timeout=<n>] [--no-disable-bluetoothd] [--redirect-output]=<f>\n", "<n>: inactivity timeout in seconds (saves battery life).\n", "<f>: file name to redirect output to.\n", "Unless --no-disable-bluetoothd is specified, bluetoothd will be stopped.", ".../ps3joy$ sudo bash -c \"source /home/myself/.bashrc; ./scripts/ps3joy_node.py --inactivity-timeout=300\"", "rostopic pub  /joy/set_feedback sensor_msgs/JoyFeedbackArray '[ [0, 3, 1], [1, 1, 0.8] ]'", "// note on plain values:\n", "// buttons are either 0 or 1\n", "// button axes go from 0 to -1\n", "// stick axes go from 0 to +/-1\n", "\n", "#define PS3_BUTTON_SELECT            0\n", "#define PS3_BUTTON_STICK_LEFT        1\n", "#define PS3_BUTTON_STICK_RIGHT       2\n", "#define PS3_BUTTON_START             3\n", "#define PS3_BUTTON_CROSS_UP          4\n", "#define PS3_BUTTON_CROSS_RIGHT       5\n", "#define PS3_BUTTON_CROSS_DOWN        6\n", "#define PS3_BUTTON_CROSS_LEFT        7\n", "#define PS3_BUTTON_REAR_LEFT_2       8\n", "#define PS3_BUTTON_REAR_RIGHT_2      9\n", "#define PS3_BUTTON_REAR_LEFT_1       10\n", "#define PS3_BUTTON_REAR_RIGHT_1      11\n", "#define PS3_BUTTON_ACTION_TRIANGLE   12\n", "#define PS3_BUTTON_ACTION_CIRCLE     13\n", "#define PS3_BUTTON_ACTION_CROSS      14\n", "#define PS3_BUTTON_ACTION_SQUARE     15\n", "#define PS3_BUTTON_PAIRING           16\n", "\n", "#define PS3_AXIS_STICK_LEFT_LEFTWARDS    0\n", "#define PS3_AXIS_STICK_LEFT_UPWARDS      1\n", "#define PS3_AXIS_STICK_RIGHT_LEFTWARDS   2\n", "#define PS3_AXIS_STICK_RIGHT_UPWARDS     3\n", "#define PS3_AXIS_BUTTON_CROSS_UP         4\n", "#define PS3_AXIS_BUTTON_CROSS_RIGHT      5\n", "#define PS3_AXIS_BUTTON_CROSS_DOWN       6\n", "#define PS3_AXIS_BUTTON_CROSS_LEFT       7\n", "#define PS3_AXIS_BUTTON_REAR_LEFT_2      8\n", "#define PS3_AXIS_BUTTON_REAR_RIGHT_2     9\n", "#define PS3_AXIS_BUTTON_REAR_LEFT_1      10\n", "#define PS3_AXIS_BUTTON_REAR_RIGHT_1     11\n", "#define PS3_AXIS_BUTTON_ACTION_TRIANGLE  12\n", "#define PS3_AXIS_BUTTON_ACTION_CIRCLE    13\n", "#define PS3_AXIS_BUTTON_ACTION_CROSS     14\n", "#define PS3_AXIS_BUTTON_ACTION_SQUARE    15\n", "#define PS3_AXIS_ACCELEROMETER_LEFT      16\n", "#define PS3_AXIS_ACCELEROMETER_FORWARD   17\n", "#define PS3_AXIS_ACCELEROMETER_UP        18\n", "#define PS3_AXIS_GYRO_YAW                19"]}
,{"url": "https://wiki.ros.org/mrpt_map", "package": "mrpt_map", "package_summary": ["The mrpt_map is able to publish a mrpt map as ros occupancy grid like the map_server"], "package_details": ["\n", "\n", "\n", "The ", " node publishes (static, prebuilt) metric maps stored in MRPT formats: ", " or ", ".  ", "Most ROS packages expect the map to be a unique occupancy grid map. This node supports those simple maps, plus all other ", ". "], "package_tt": ["mrpt_map", "map", "~map_file", "map_metadata", "~map_file", "static_map", "~ini_file", "string", "\"map.ini\"", "~map_file", "string", ".simplemap", ".gridmap", "~debug", "bool", "~frequency", "double", "~frame_id", "string"]}
,{"url": "https://wiki.ros.org/agni_tf_tools", "package": "agni_tf_tools", "package_summary": ["This package provides a gui program as well as a rviz plugin to publish static transforms.\n  Both support the transformation between various Euler angle representations.\n  The rviz plugin also allows to configure the transform with an interactive marker."], "package_details": [" ", "\n", "\n", "\n", " ", "Dependent on the order of rotation axes, there are different sets of Euler angles. One common set is roll-pitch-yaw (the default in ROS), which corresponds to rotations about x, y, and z axes w.r.t. the fixed frame. To specify Euler angles w.r.t. a different set or order of axes, simply specify the desired order instead of rpy. For example, ", " will rotate by 30\u00b0 about the y axis, then by 50\u00b0 about the x axis, and finally by 70\u00b0 about the y axis. In order to transform a given Euler angle representation into another one, simply enter the desired axes order - replacing the whole text field including the angular values. ", "To specify whether rotations should be performed w.r.t. the ", "tatic or the moving / ", "otationg frame (corresponding to left resp. right matrix multiplication), it's possible to prefix the axes order by \"", "\" or \"", "\". Omitting the prefix, corresponds to \"", "\" or right matrix multiplication. ", "The rviz plugin also supports frame transformations. If you want to compute the entered transform w.r.t. another parent frame, simply enable the checkbox \"", "\" and subsequently change the ", ". If the checkbox is not ticked, changing the parent frame doesn't change the relative transform, but moves the interactive marker. ", "The entered transform is published as soon as a empty frame names are provided and the \"", "\" checkbox is enabled. "], "package_tt": ["yxz:\u00a030,\u00a050,\u00a070", "adapt\u00a0transformation", "parent\u00a0frame", "publish\u00a0transform"]}
,{"url": "https://wiki.ros.org/map_msgs", "package": "map_msgs", "package_summary": ["This package defines messages commonly used in mapping packages."], "package_details": ["This package provides a preliminary implementation of messages defined in the work-in-progress REP 129. For more information, please have a look at the ", ". "]}
,{"url": "https://wiki.ros.org/rqt_logger_level", "package": "rqt_logger_level", "package_summary": ["rqt_logger_level provides a GUI plugin for configuring the logger level of ROS nodes.", "\n   ", "\n  rqt_logger_level takes over `wx`-based tool [[rxloggerlevel]]."], "package_details": ["\n", " is an application for adjusting the logger level of ros nodes ", "\n"], "package_tt": ["rqt_logger_level"], "package_code": ["$ rosrun rqt_logger_level rqt_logger_level"]}
,{"url": "https://wiki.ros.org/rosbridge_server", "package": "rosbridge_server", "package_summary": ["A WebSocket interface to rosbridge."], "package_details": ["\n", "\n", "Rosbridge server is part of the rosbridge_suite of packages, providing a ", " transport layer. A ", " is a low-latency, bidirectional communication layer between clients (web browsers) and servers. By providing a ", " connection, rosbridge server allows webpages to talk ROS using the rosbridge protocol. ", "Rosbridge server creates a ", " connection and passes any JSON messages from the ", " to rosbridge_library, so rosbridge library can convert the JSON strings into ROS calls. The reverse also happens, with rosbridge library converting any ROS responses into JSON, then passing it to rosbridge server to send over the ", " connection. ", "Check out ", " for a ", " library that talks to rosbridge server over ", ". ", "While rosbridge server provides a ", " connection, rosbridge itself is not tied to any particular transport layer. You could add a rosbridge TCP package or node, for example, that communicates with rosbridge using TCP sockets. No ", " or browsers needed. ", " for these additional transport layers are encouraged! "]}
,{"url": "https://wiki.ros.org/asr_msgs", "package": "asr_msgs", "package_summary": ["This package contains all messages that are particular to our Active Scene Recognition - Framework at \n\t\tHumanoids and Intelligence Systems Lab (HIS), Karlsruhe Institute of Technology (KIT).\n\t  These messages make up the interfaces between the different collaborating components of this system.\n\t  They are of critical importance and structured by the ROS communication capabilities."], "package_details": [" ", "\n", "\n", " "]}
,{"url": "https://wiki.ros.org/wfov_camera_msgs", "package": "wfov_camera_msgs", "package_summary": ["Messages related to the Point Grey camera driver."]}
,{"url": "https://wiki.ros.org/turtlebot3", "package": "turtlebot3", "package_summary": ["ROS packages for the Turtlebot3 (meta package)"], "package_details": [" ", "\n", " ", " is a new generation mobile robot that is modular, compact and customizable. Let\u2019s explore ROS and create exciting applications for education, research and product development. The goal of ", " is to drastically reduce the size and lower the price of the platform without sacrificing capability, functionality, and quality. Optional parts such as chassis, computers and sensors are available, and ", " can be customized in various ways. ", " is willing to be in the center of the maker movement by applying the latest technical advances of the SBC(Single Board Computer), the Depth sensor and 3D printing technology. ", "\n", "\n", "\n", "\n"], "package_tt": ["TurtleBot3", "TurtleBot3", "TurtleBot3"]}
,{"url": "https://wiki.ros.org/roslisp_utilities", "package": "roslisp_utilities", "package_summary": ["Some utility functionality to interact with ROS using roslisp."]}
,{"url": "https://wiki.ros.org/lidar_camera_calibration", "package": "lidar_camera_calibration", "package_summary": ["ROS package to find a rigid-body transformation between a LiDAR and a camera"], "package_details": [" ", "We maintain a very detailed README and other information regarding the lidar_camera_calibration package at the ", " repo for the package. For more information regarding setting up lidar_camera_calibration, detailed usage, package capabilities and tutorials, please visit the ", " repository at ", ". ", "For technical information please visit: ", " "]}
,{"url": "https://wiki.ros.org/moveit_ros_planning", "package": "moveit_ros_planning", "package_summary": ["Planning components of MoveIt! that use ROS"]}
,{"url": "https://wiki.ros.org/jsk_tools", "package": "jsk_tools", "package_summary": ["Includes emacs scripts, ros tool alias generator, and launch doc generator."], "package_details": ["Documentation is available ", ". "]}
,{"url": "https://wiki.ros.org/julius", "package": "julius", "package_summary": ["julius: Open-Source Large Vocabulary CSR Engine (http://julius.sourceforge.jp/index.php)"]}
,{"url": "https://wiki.ros.org/moveit_plugins", "package": "moveit_plugins", "package_summary": ["Metapackage for moveit plugins."]}
,{"url": "https://wiki.ros.org/mbf_msgs", "package": "mbf_msgs", "package_summary": ["The move_base_flex messages package providing the action definition files for the action GetPath, ExePath, Recovery and MoveBase. The action servers providing these action are implemented in ", "."]}
,{"url": "https://wiki.ros.org/zeroconf_msgs", "package": "zeroconf_msgs", "package_summary": ["General ros communications used by the various zeroconf implementations."], "package_details": ["Messages supporting the ", " and ", " stacks. "]}
,{"url": "https://wiki.ros.org/combined_robot_hw", "package": "combined_robot_hw", "package_summary": ["Combined Robot HW class."], "package_details": ["\n", " ", "High-resolution version can be found ", ". ", "A short summary of CombinedRobotHW can be found in ", " ROScon 2016 talk. "]}
,{"url": "https://wiki.ros.org/turtlebot3_description", "package": "turtlebot3_description", "package_summary": ["3D models of the TurtleBot3 for simulation and visualization"], "package_details": [" ", "\n", "\n"], "package_tt": ["turtlebot3_(model).urdf.xacro", "<turtlebot3_(model)/>", "turtlebot3_(model).gazebo.xacro", "<turtlebot3_(model)_sim/>", "common_properties.xacro"]}
,{"url": "https://wiki.ros.org/ocl", "package": "ocl", "package_summary": ["Orocos component library\n    This package contains standard components for the Orocos Toolchain"], "package_details": ["\n", "\n", "Read the ", " for detailed information on how to use the deployer. "], "package_code": ["rosrun ocl deployer-gnulinux -ldebug -s deploy.ops", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>                                                                                                                            \n", "  <!DOCTYPE properties SYSTEM \"cpf.dtd\">                                                                                                                            \n", "    <properties>\n", "     <simple name=\"init_file\" type=\"string\"><description>Name of the initialisation file</description><value>init.xml</value></simple>\n", "    </properties>  ", " <launch>                                                                                                                                                 \n", "   <node name=\"myNodeName\" pkg=\"ocl\" type=\"deployer-gnulinux\" launch-prefix=\"konsole -e\" args=\"-ldebug -s $(find myRosPkg)/deploy.ops --\">\n", "   </node>           \n", "  </launch> "]}
,{"url": "https://wiki.ros.org/rosflight_pkgs", "package": "rosflight_pkgs", "package_summary": ["ROS interface for the ROSflight autpilot stack"]}
,{"url": "https://wiki.ros.org/rc_genicam_api", "package": "rc_genicam_api", "package_summary": ["GenICam/GigE Vision Convenience Layer.\n\n      This package combines the Roboception convenience layer for images with the\n      GenICam reference implementation and a GigE Vision transport layer. It is a\n      self contained package that permits configuration and image streaming of\n      GenICam / GigE Vision 2.0 compatible cameras like the Roboception rc_visard.\n\n      This package also provides some tools that can be called from the command line\n      for discovering cameras, changing their configuration and streaming images.\n      Although the tools are meant to be useful when working in a shell or in a\n      script, their main purpose is to serve as example on how to use the API for\n      reading and setting parameters, streaming and synchronizing images.\n\n      See LICENSE.md for licensing terms of the different parts."], "package_details": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", " ", "All three options can be seen in the output of ", ". ", "If the given ID contains a colon (i.e. ", "), the part before the (first) ", "colon is interpreted as interface ID and the part after the first colon is ", "treated as device ID. This is the format that ", " shows. A device ", "with the given ID is only sought on the specified interface. This can be ", "useful if there are several ways to reach a device from a host computer, ", "e.g. via wireless and wired network connection, but a certain connection ", "type (e.g. wired) is preferred due to higher bandwidth and lower latency. ", "Examples: ", ", ", " or ", " ", "The ", " script performs some simple checks and should be run while or after streaming images via GigE Vision. ", "These values can be changed during runtime with ", " or written to ", " for persistence across reboots. ", "If the number of UDP ", " increases while streaming, increasing the socket receive buffer size usually fixes the problem. ", "Check the ", " ", " or ", "Check with ", " and increase the values if needed: "], "package_tt": [":", "_", "00_14_2d_2c_6e_bb", "rc_visard", ":my:name", "02911931", "gc_config\u00a0-l", ":", "gc_config\u00a0-l", "eth0:00_14_2d_2c_6e_bb", "eth1:02911931", "wlan0:rc_visard", "net_perf_check.sh", "sysctl", "/etc/sysctl.conf", "RcvbufErrors", "RcvbufErrors\u00a0with", "net_perf_check.sh", "net_perf_check.sh"], "package_code": ["  gc_stream <ID> ComponentSelector=Intensity ComponentEnable=1 ComponentSelector=Disparity ComponentEnable=0 n=10", "./net_perf_check.sh --help", "sudo ifconfig eth0 mtu 9000", "netstat -us | grep RcvbufErrors", "sudo sysctl -w net.core.rmem_max=33554432", "sudo sysctl -w net.core.netdev_max_backlog=2000\n", "sudo sysctl -w net.core.netdev_budget=600"]}
,{"url": "https://wiki.ros.org/pluginlib", "package": "pluginlib", "package_summary": ["The pluginlib package provides tools for writing and dynamically loading plugins using the ROS build infrastructure.\n    To work, these tools require plugin providers to register their plugins in the package.xml of their package."], "package_tt": ["polygon_interface_package", "rectangle_plugin", "triangle_plugin", "rectangle_plugin", "triangle_plugin", "polygon_interface_package", ".cpp", "pluginlib", "class_list_macros.h", "class_list.cpp", "librectangle", "rectangle_plugin", "rectangle_plugin.xml", "export", "rectangle_plugin", "export", "rectangle_plugin", "manifest.xml", "ClassLoader", "class_loader.h", "ClassLoader", "rectangle", "polygon", "polygon_interface", "rectangle_plugin", "triangle_plugin", "rectangle_plugin", "triangle_plugin", "polygon_interface", "PLUGINLIB_EXPORT_CLASS", "class_list.cpp", "librectangle", "rectangle_plugin", "rectangle_plugin.xml", "export", "rectangle_plugin", "export", "rectangle_plugin", "catkin/package.xml", "ClassLoader", "class_loader.h", "ClassLoader", "rectangle", "polygon", "PLUGINLIB_REGISTER_CLASS", "PLUGINLIB_DECLARE_CLASS", "PLUGINLIB_EXPORT_CLASS"], "package_code": ["\n", "\n", "\n", "\n", "\n", "\n", "<library path=\"lib/librectangle\">\n", "  <class name=\"example_pkg/Rectangle\" type=\"rectangle_namespace::Rectangle\" base_class_type=\"polygon_namespace::Polygon\">\n", "  <description>\n", "  This is a rectangle plugin\n", "  </description>\n", "  </class>\n", "</library>", "<export>\n", "  <polygon_interface_package plugin=\"${prefix}/rectangle_plugin.xml\" />\n", "</export>", "  <depend package=\"polygon_interface_package\" />", "rospack plugins --attrib=plugin nav_core", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "<library path=\"lib/librectangle\">\n", "  <class type=\"rectangle_namespace::Rectangle\" base_class_type=\"polygon_namespace::Polygon\">\n", "  <description>\n", "  This is a rectangle plugin\n", "  </description>\n", "  </class>\n", "</library>", "<export>\n", "  <polygon_interface plugin=\"${prefix}/rectangle_plugin.xml\" />\n", "</export>", "  <build_depend>polygon_interface</build_depend>\n", "  <run_depend>polygon_interface</run_depend>", "rospack plugins --attrib=plugin nav_core", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", " plugin_macro_update", "<library path=\"lib/librectangle\">\n", "  <class name=\"rviz/Rectangle\" type=\"rectangle_namespace::Rectangle\" base_class_type=\"polygon_namespace::Polygon\">\n", "  <description>\n", "  This is a rectangle plugin\n", "  </description>\n", "  </class>\n", "</library>"]}
,{"url": "https://wiki.ros.org/swri_image_util", "package": "swri_image_util", "package_summary": ["swri_image_util"]}
,{"url": "https://wiki.ros.org/qt_gui_cpp", "package": "qt_gui_cpp", "package_summary": ["qt_gui_cpp provides the foundation for C++-bindings for qt_gui and creates bindings for every generator available.\n    At least one specific binding must be available in order to use C++-plugins."]}
,{"url": "https://wiki.ros.org/pr2_mechanism_controllers", "package": "pr2_mechanism_controllers", "package_summary": ["The pr2_mechanism_controllers package contains realtime\n    controllers that are meant for specific mechanisms of the PR2."], "package_details": ["\n", "\n", "At the present time, the controllers in this stack are not intended for direct use. The controllers should be used via their ", " interfaces, e.g., ", ", ", ", ", ", and ", ".    The ", " library is stable. "]}
,{"url": "https://wiki.ros.org/libsiftfast", "package": "libsiftfast", "package_summary": ["Library to compute SIFT features"]}
,{"url": "https://wiki.ros.org/moveit_planners_ompl", "package": "moveit_planners_ompl", "package_summary": ["MoveIt! interface to OMPL"]}
,{"url": "https://wiki.ros.org/phidgets_ik", "package": "phidgets_ik", "package_summary": ["Driver for the Phidgets InterfaceKit devices"]}
,{"url": "https://wiki.ros.org/multisense", "package": "multisense", "package_summary": ["multisense catkin driver"]}
,{"url": "https://wiki.ros.org/rosauth", "package": "rosauth", "package_summary": ["Server Side tools for Authorization and Authentication of ROS Clients"], "package_details": ["\n", "\n", "\n", "\n", "The rosbridge server is responsible for calling the /authenticate service on a request of the client. This can be done using the authenticate method of roslibjs: ", " "], "package_tt": ["authenticate", "~allowed_time_delta", "float", "~secret_file_location", "string"], "package_code": ["roslaunch rosbridge_server rosbridge_websocket.launch authenticate:=true", "echo \"1234567890abcdef\" > /tmp/secret.txt  # Example secret\n", "rosrun rosauth ros_mac_authentication _secret_file_location:=/tmp/secret.txt _allowed_time_delta:=-1", "echo -n \"1234567890abcdefclientdestrand0level0\" | sha512sum", "rosservice call /authenticate \"mac: '19d9d2166799f1ffd6fee6379f957502aff8716bfebc8cc8b3bac57ade14441bb9678be89d0a7eec9c81291f854d754d7a4de2278bede56f162c2faeb468c68a'\n", "client: 'client'\n", "dest: 'dest'\n", "rand: 'rand'\n", "t: {secs: 0, nsecs: 0}\n", "level: 'level'\n", "end: {secs: 0, nsecs: 0}\"", "authenticated: True", "let secret = 'myawesomesecret1'\n", "let dest = this.url\n", "let rand = randomString(10)\n", "let time = new Date().getTime() / 1000\n", "let timeEnd = time + 1000\n", "let level = \"admin\"\n", "let mac = sha512(secret + client.getUA() + dest + rand + parseInt(time).toString() + level + parseInt(timeEnd).toString())  // using sha512 library js-sha512 and client library clientjs\n", "this.authenticate(mac, client.getUA(), dest, rand, time, level, timeEnd)  // method from roslibjs"]}
,{"url": "https://wiki.ros.org/moveit_planners_chomp", "package": "moveit_planners_chomp", "package_summary": ["The interface for using CHOMP within MoveIt!"]}
,{"url": "https://wiki.ros.org/rqt_py_console", "package": "rqt_py_console", "package_summary": ["rqt_py_console is a Python GUI plugin providing an interactive Python console."]}
,{"url": "https://wiki.ros.org/sr_ethercat_hand_config", "package": "sr_ethercat_hand_config", "package_summary": ["\n\n    sr_ethercat_hand_config contains the different yaml files storing the parameters used on the etherCAT hand.\n\n  "]}
,{"url": "https://wiki.ros.org/mbf_costmap_core", "package": "mbf_costmap_core", "package_summary": ["This package provides common interfaces for navigation specific robot actions. It contains the CostmapPlanner, CostmapController and CostmapRecovery interfaces. The interfaces have to be implemented by the plugins to make them available for Move Base Flex using the mbf_costmap_nav navigation implementation. That implementation inherits the mbf_abstract_nav implementation and binds the system to a local and a global costmap."]}
,{"url": "https://wiki.ros.org/seed_r7_robot_interface", "package": "seed_r7_robot_interface", "package_summary": ["The seed_r7_robot_interface package"]}
,{"url": "https://wiki.ros.org/teleop_tools_msgs", "package": "teleop_tools_msgs", "package_summary": ["The teleop_tools_msgs package"]}
,{"url": "https://wiki.ros.org/xdot", "package": "xdot", "package_summary": ["\n    ", ", \n    is an interactive viewer for graphs written in Graphviz's dot\n    language.\n\n    This package adds front-end capabilities to XDot including WX Widget\n    support and a mechanism for receiving callbacks when nodes are clicked. This extension is provided as BSD.\n\n  "], "package_details": ["\n", " ", " ", "\n", " ", "Please see ", " and ", " for more information. "], "package_code": ["rosrun xdot xdot.py [file]"]}
,{"url": "https://wiki.ros.org/joystick_interrupt", "package": "joystick_interrupt", "package_summary": ["Interrupt cmd_vel by joystick input"]}
,{"url": "https://wiki.ros.org/pmb2_gazebo", "package": "pmb2_gazebo", "package_summary": ["Simulation files for the PMB2 robot."]}
,{"url": "https://wiki.ros.org/pmb2_controller_configuration_gazebo", "package": "pmb2_controller_configuration_gazebo", "package_summary": ["Gazebo-specifig launch files and scripts needed to configure\n    the controllers of the PMB2 robot in simulation."]}
,{"url": "https://wiki.ros.org/lanelet2_projection", "package": "lanelet2_projection", "package_summary": ["Lanelet2 projection library for lat/lon to local x/y conversion"]}
,{"url": "https://wiki.ros.org/interactive_marker_tutorials", "package": "interactive_marker_tutorials", "package_summary": ["The interactive_marker_tutorials package"], "package_details": ["See ", " for the tutorials based on this package. "]}
,{"url": "https://wiki.ros.org/sick_scan", "package": "sick_scan", "package_summary": ["A ROS driver for the SICK TiM and SICK MRS series of laser scanners.\n    This package is based on the original sick_tim-repository of Martin G\u00fcnther et al."], "package_details": ["\n", "\n", "\n", "\n", "\n", " ", "ROS packages for SICK laser scaners. This driver provides the measurement data as ", " and ", " data. The use of ", " data is recommended. ", "The ", " data should only be used for debugging purposes. They provide the raw data for each scan plane in a different coordinate frame. Due to the geometry of the scanning planes of the MRS1104 there is no coordinate transformation between the scan planes that can be described by ", " messages, therefore no ", " messages are published. That is why the ", " data should be used. "], "package_tt": ["nc\u00a0-z\u00a0-v\u00a0-w5\u00a0$SCANNERIPADDRESS\u00a02112"], "package_code": ["source /opt/ros/<rosdistro>/setup.bash\n", "mkdir -p ~/ros_catkin_ws/src/\n", "cd ~/ros_catkin_ws/src/\n", "git clone -b devel --single-branch git://github.com/SICKAG/sick_scan.git\n", "cd ..\n", "catkin_make\n", "source ~/ros_catkin_ws/install/setup.bash", " roslaunch sick_scan sick_mrs_1xxx.launch", " rviz rviz"]}
,{"url": "https://wiki.ros.org/yocs_velocity_smoother", "package": "yocs_velocity_smoother", "package_summary": ["Bound incoming velocity messages according to robot velocity and acceleration limits.", "Contents", " ", "\n", "\n", "\n", "Take a look to the ", " to learn how yocs_velocity_smoother works together with other components to build up a safe and flexible control system. ", "\n", "By robot feedback we mean the current velocity at which robot \"thinks\" he moves now. The two common ways to know this are: ", "Option 0 of course ignores any robot feedback. There are some reasons to use robot feedback. The two we face more often are: ", "So the recommended option is 2 in most cases (if there aren't concurrent controllers it will have no effect), letting option 1 just for special situations. If people don't find it useful at all, we will probably remove. "], "package_details": [" "], "package_tt": ["~raw_cmd_vel", "~odometry", "~smooth_cmd_vel", "~accel_lim_v", "double", "~accel_lim_w", "double", "~speed_lim_v", "double", "~speed_lim_w", "double", "~decel_factor", "double", "~frequency", "double", "~raw_cmd_vel", "~odometry", "~robot_cmd_vel", "~smooth_cmd_vel", "~accel_lim_v", "double", "~accel_lim_w", "double", "~speed_lim_v", "double", "~speed_lim_w", "double", "~decel_factor", "double", "~frequency", "double", "~robot_feedback", "int", "~raw_cmd_vel", "~odometry", "~robot_cmd_vel", "~smooth_cmd_vel", "~accel_lim_v", "double", "~accel_lim_w", "double", "~speed_lim_v", "double", "~speed_lim_w", "double", "~decel_factor", "double", "~frequency", "double", "~robot_feedback", "int"]}
,{"url": "https://wiki.ros.org/stomp_core", "package": "stomp_core", "package_summary": ["This package  provides the core STOMP (Stochastic Trajectory Optimization for Motion Planning) algorithm that can be used for robot motion planning tasks or other similar optimization tasks"]}
,{"url": "https://wiki.ros.org/nav_2d_utils", "package": "nav_2d_utils", "package_summary": ["A handful of useful utility functions for nav_core2 packages."], "package_details": [" "]}
,{"url": "https://wiki.ros.org/jsk_rqt_plugins", "package": "jsk_rqt_plugins", "package_summary": ["The jsk_rqt_plugins package"], "package_details": ["Doc: ", " "]}
,{"url": "https://wiki.ros.org/ethercat_trigger_controllers", "package": "ethercat_trigger_controllers", "package_summary": ["Controllers to operate the digital output of the motor controller\n    boards and the projector board. This package has not been reviewed and\n    should be considered unstable."], "package_details": ["\n"]}
,{"url": "https://wiki.ros.org/novatel_msgs", "package": "novatel_msgs", "package_summary": ["ROS messages which represent raw Novatel SPAN data."], "package_details": ["\n", "\n", "These messages are the low-level binary interface between a NovAtel SPAN unit and ROS. Typical use cases should not require working with these messages. ", "Please see the related package, ", ". "]}
,{"url": "https://wiki.ros.org/jsk_pr2_startup", "package": "jsk_pr2_startup", "package_summary": ["\n\n     jsk_pr2_startup\n\n  "]}
,{"url": "https://wiki.ros.org/moveit_ros_benchmarks", "package": "moveit_ros_benchmarks", "package_summary": ["Enhanced tools for benchmarks in MoveIt!"]}
,{"url": "https://wiki.ros.org/rcdiscover", "package": "rcdiscover", "package_summary": ["This package contains tools for the discovery of Roboception devices via GigE Vision."], "package_details": [" "], "package_tt": ["rcdiscover", "rcdiscover-gui"]}
,{"url": "https://wiki.ros.org/rqt_gui_py", "package": "rqt_gui_py", "package_summary": ["rqt_gui_py enables GUI plugins to use the Python client library for ROS."]}
,{"url": "https://wiki.ros.org/velodyne_laserscan", "package": "velodyne_laserscan", "package_summary": ["Extract a single ring of a Velodyne PointCloud2 and publish it as a LaserScan message"]}
,{"url": "https://wiki.ros.org/lanelet2_routing", "package": "lanelet2_routing", "package_summary": ["Routing module for lanelet2"]}
,{"url": "https://wiki.ros.org/controller_manager_msgs", "package": "controller_manager_msgs", "package_summary": ["Messages and services for the controller manager."]}
,{"url": "https://wiki.ros.org/urg_c", "package": "urg_c", "package_summary": ["The urg_c package"]}
]
